# Load yaml required libraries
require 'yaml'

# Load configuration file
dir = File.join(File.dirname(File.expand_path(__FILE__)))
vm_config = YAML.load_file("#{dir}/config/configuration.yaml")

public_key = File.read(vm_config["conf_ssh_public_key_path"])

Vagrant.configure("2") do |config|
	##define server machine TariqServer
	config.vm.define vm_config["conf_server_hostname"] do |server|

		#box of the magine (image)
		server.vm.box			= vm_config["conf_box"]

		server.vm.box_version		= vm_config["conf_box_version"]
		server.vm.box_architecture	= vm_config["conf_box_architecture"]
		server.vm.hostname		= vm_config["conf_server_hostname"]
		server.vm.post_up_message	= vm_config["conf_server_post_up_message"]
		
		
		#config ssh to connect without password
		server.ssh.insert_key           = false
		server.ssh.config               = vm_config["conf_ssh_conf_file"]	
		
		#add new ethernet network
		server.vm.network "private_network", type: "static", ip: vm_config["conf_server_address"]
		
		#pass public key to machine
		server.vm.provision "shell", inline: <<-SHELL
			mkdir -p /home/vagrant/.ssh
			rm -rf /home/vagrant/.ssh/authorized_keys
			echo "#{public_key}" > /home/vagrant/.ssh/authorized_keys
			chown vagrant:vagrant  /home/vagrant/.ssh/authorized_keys
			chmod 700 /home/vagrant/.ssh
			chmod 600 /home/vagrant/.ssh/authorized_keys
		SHELL
		
		#change password of default login vagrant
		server.vm.provision "shell", inline: <<-SHELL
			echo 'vagrant:#{vm_config["conf_password"]}' | chpasswd
		SHELL

		# Configure VM resources dynamically based on the provider
		server.vm.provider :virtualbox do |v|
			v.memory = vm_config["conf_memory"] || 1024
			v.cpus   = vm_config["conf_cpus"] || 1
			v.gui    = true
			v.name   = vm_config["conf_server_machine_name"]
		end

		#Run script to install and configure k3s
		server.vm.provision "shell", path: vm_config["conf_k3s_server_script_path"]
	end

	##define machine for agent TariqAgent	-------------------------------------------------------
	config.vm.define vm_config["conf_agent_hostname"] do |agent|

		#box of the magine (image)
		agent.vm.box			= vm_config["conf_box"]

		agent.vm.box_version		= vm_config["conf_box_version"]
		agent.vm.box_architecture	= vm_config["conf_box_architecture"]
		agent.vm.hostname		= vm_config["conf_agent_hostname"]
		agent.vm.post_up_message	= vm_config["conf_agent_post_up_message"]
		
		#config ssh to connect without password
		agent.ssh.insert_key           = false
		agent.ssh.config               = vm_config["conf_ssh_conf_file"]
		
		#add new ethernet network
		agent.vm.network "private_network", type: "static", ip: vm_config["conf_agent_address"]
		
		#pass ssh public key to machine	
		agent.vm.provision "shell", inline: <<-SHELL
			mkdir -p /home/vagrant/.ssh
			rm -rf /home/vagrant/.ssh/authorized_keys
			echo "#{public_key}" > /home/vagrant/.ssh/authorized_keys
			chown vagrant:vagrant  /home/vagrant/.ssh/authorized_keys
			chmod 700 /home/vagrant/.ssh
			chmod 600 /home/vagrant/.ssh/authorized_keys
		SHELL
		
		#change password of default login vagrant
		agent.vm.provision "shell", inline: <<-SHELL
			echo 'vagrant:#{vm_config["conf_password"]}' | chpasswd
		SHELL

		# Configure VM resources dynamically based on the provider
		agent.vm.provider :virtualbox do |v|
			v.memory = vm_config["conf_memory"] || 1024
			v.cpus   = vm_config["conf_cpus"] || 1
			v.gui    = true
			v.name   = vm_config["conf_agent_machine_name"]
		end

		#Run script to install and configure k3s
		agent.vm.provision "shell", path: vm_config["conf_k3s_agent_script_path"]
	end
end
